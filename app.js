// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// Make an array with the entire Fibonacci sequence up to 4 million
var fib = [1,2];

while (fib[fib.length - 1] < 4000001) {
    fib.push(fib[fib.length - 1] + fib[fib.length - 2]);
};

fib.pop();



// Remove the odd terms
var fibEven = [];

for (var i = 0; i < fib.length; i++) {
    if (fib[i] % 2 === 0) {
        fibEven.push(fib[i]);
    };
};

console.log(fibEven)

// Find the total of the array

var numbers = [15.5, 2.3, 1.1, 4.7];

function getSum(total, num) {
    return total + Math.round(num);
}

var total = fibEven.reduce(getSum, 0);

console.log(total)


//this is a test for github
